{ "notes" : [ "<p>Automatic big table caching uses temperature and object-based algorithms to track medium and big tables. Oracle will cache very small tables, but they will not be tracked by automatic big table caching.</p>" ], "property" : { "Oracle RAC" : "Multiple instances can have different values, but it is recommended to keep the big table cache section size uniform.", "Modifiable in a PDB" : "No", "Modifiable" : "<code>ALTER SYSTEM</code>", "Parameter type" : "String", "Default value" : "<code>0</code>", "Syntax" : "<code>DB_BIG_TABLE_CACHE_PERCENT_TARGET = string</code>", "Basic" : "No" }, "section" : "<p><code>DB_BIG_TABLE_CACHE_PERCENT_TARGET</code> specifies the cache section target size for automatic big table caching, as a percentage of the buffer cache. Automatic big table caching enables parallel queries and serial queries to use the buffer cache, which enhances the in-memory query capabilities of Oracle Database. Automatic big table caching is designed primarily to enhance performance for data warehouse workloads, but it also improves performance in mixed workloads.</p>\n<p>Starting in Oracle Database 12<span class=\"italic\">c</span> Release 1 (12.1.0.2), table scans can use a different algorithm in the following scenarios:</p>\n<ul style=\"list-style-type: disc;\">\n<li>\n<p>Parallel queries:</p>\n<p>In single-instance and Oracle Real Application Clusters (Oracle RAC) databases, parallel queries can use the automatic big table cache when the <code>DB_BIG_TABLE_CACHE_PERCENT_TARGET</code> initialization parameter is set to a non-zero value, and the <code>PARALLEL_DEGREE_POLICY</code> initialization parameter is set to <code>AUTO</code> or <code>ADAPTIVE</code>.</p>\n</li>\n<li>\n<p>Serial queries:</p>\n<p>In a single-instance configuration only, serial queries can use the automatic big table cache when the <code>DB_BIG_TABLE_CACHE_PERCENT_TARGET</code> initialization parameter is set to a non-zero value.</p>\n</li>\n</ul>\n<p>When a non-zero value is specified for the <code>DB_BIG_TABLE_CACHE_PERCENT_TARGET</code> parameter, the value indicates the percentage of the buffer cache to reserve for the big table cache. The largest value that can be specified with the <code>DB_BIG_TABLE_CACHE_PERCENT_TARGET</code> parameter is 90, which reserves 10% of the buffer cache for usage besides table scans.</p>\n<p>The default value of this parameter is <code>0</code>. Therefore, automatic big table caching is not enabled by default. When automatic big table caching is not enabled, queries might run using the least recently used (LRU) mechanism for cached reads, or might decide to use direct reads for the table scan.</p>\n<p>If a large table is about the size of the combined size of the big table cache of all instances, the table will be partitioned and cached or mostly cached on all instances. With in-memory parallel query, this could eliminate most disk reads for queries on the table, or the database could intelligently read from disk only for the portion of the table that does not fit in the big table cache. If the big table cache cannot cache all the tables to be scanned, only the most frequently accessed tables will be cached, and the rest will be read via direct read automatically.</p>\n<p>Use these guidelines when setting the parameter:</p>\n<ul style=\"list-style-type: disc;\">\n<li>\n<p>If you do not enable automatic degree of parallelism (DOP) in your Oracle RAC environment, do not set this parameter because the big table cache is not used in that situation.</p>\n</li>\n<li>\n<p>When setting this parameter, consider the workload mix: how much of the workload is for OLTP; insert, update, and random access; and how much of the workload involves table scans. Because data warehouse workloads often perform large table scans, you may consider giving the big table cache section a higher percentage of buffer cache space for data warehouses.</p>\n</li>\n<li>\n<p>This parameter can be dynamically changed if the workload changes. The change could take some time to reach the target (depending on the current workload) because buffer cache memory might be actively used at that time.</p>\n</li>\n</ul>\n<div class=\"infobox-note\" id=\"GUID-122865EE-4589-434D-8DD5-4E201C6CC739__GUID-750D823F-94BE-4A01-9428-E1BDCC147A85\">\n<p class=\"notep1\">Note:</p>\n<p>Automatic big table caching uses temperature and object-based algorithms to track medium and big tables. Oracle will cache very small tables, but they will not be tracked by automatic big table caching.</p>\n</div>\n<div class=\"infoboxnotealso\" id=\"GUID-122865EE-4589-434D-8DD5-4E201C6CC739__GUID-667DC437-3636-49CF-81B8-61B7E06DBBBF\">\n<p class=\"notep1\">See Also:</p>\n<ul style=\"list-style-type: disc;\">\n<li>\n<p><span class=\"q\">\"<a href=\"PARALLEL_DEGREE_POLICY.htm#GUID-BF09265F-8545-40D4-BD29-E58D5F02B0E5\">PARALLEL_DEGREE_POLICY</a>\"</span></p>\n</li>\n<li>\n<p>See <span class=\"q\">\"<a href=\"V-BT_SCAN_CACHE.htm#GUID-E7789CE9-87E2-4A7F-88CF-461D22023E34\">V$BT_SCAN_CACHE</a>\"</span> and <span class=\"q\">\"<a href=\"V-BT_SCAN_OBJ_TEMPS.htm#GUID-7C1A2CBB-8F54-4A66-B8EE-E756DAAE115C\">V$BT_SCAN_OBJ_TEMPS</a>\"</span> for more information about the big table cache</p>\n</li>\n<li>\n<p><a class=\"olink VLDBG14145\" target=\"_blank\" href=\"../VLDBG/inmemory-parallel-exec.htm#VLDBG14145\"><span class=\"italic\">Oracle Database VLDB and Partitioning Guide</span></a> for more information about this parameter and about automatic big table caching</p>\n</li>\n</ul>\n</div>\n</div>\n<!-- class=\"section\" --></div>\n</div>\n<!-- class=\"ind\" --><!-- Start Footer -->\n</div>\n<!-- add extra wrapper close div-->", "seealso" : [ "<ul style=\"list-style-type: disc;\">\n<li>\n<p><span class=\"q\">\"<a href=\"PARALLEL_DEGREE_POLICY.htm#GUID-BF09265F-8545-40D4-BD29-E58D5F02B0E5\">PARALLEL_DEGREE_POLICY</a>\"</span></p>\n</li>\n<li>\n<p>See <span class=\"q\">\"<a href=\"V-BT_SCAN_CACHE.htm#GUID-E7789CE9-87E2-4A7F-88CF-461D22023E34\">V$BT_SCAN_CACHE</a>\"</span> and <span class=\"q\">\"<a href=\"V-BT_SCAN_OBJ_TEMPS.htm#GUID-7C1A2CBB-8F54-4A66-B8EE-E756DAAE115C\">V$BT_SCAN_OBJ_TEMPS</a>\"</span> for more information about the big table cache</p>\n</li>\n<li>\n<p><a class=\"olink VLDBG14145\" target=\"_blank\" href=\"../VLDBG/inmemory-parallel-exec.htm#VLDBG14145\"><span class=\"italic\">Oracle Database VLDB and Partitioning Guide</span></a> for more information about this parameter and about automatic big table caching</p>\n</li>\n</ul>" ] }